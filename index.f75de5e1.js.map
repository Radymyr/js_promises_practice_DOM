{"mappings":"AAAA,yCAAyC,GACzC;AAEA,MAAM,aAAa;IAAC;IAAe;CAAQ;AAE3C,MAAM,mBAAmB,CAAC;IACxB,MAAM,MAAM,SAAS,aAAa,CAAC;IAEnC,IAAI,SAAS,OAAO,EAClB,IAAI,SAAS,CAAC,GAAG,CAAC;IAGpB,IAAI,CAAC,SAAS,OAAO,EACnB,IAAI,SAAS,CAAC,GAAG,CAAC;IAGpB,IAAI,YAAY,CAAC,WAAW;IAC5B,IAAI,WAAW,GAAG,SAAS,OAAO;IAElC,SAAS,IAAI,CAAC,MAAM,CAAC;AACvB;AAEA,MAAM,eAAe,IAAI,QAAQ,CAAC,SAAS;IACzC,SAAS,gBAAgB,CAAC,UAAU,CAAC,EAAE,EAAE;QACvC,QAAQ;YAAE,SAAS;YAAM,SAAS;QAA6B;IACjE;IAEA,WAAW,QAAQ,MAAM;QACvB,SAAS;QACT,SAAS;IACX;AACF;AAEA,aACG,IAAI,CAAC,CAAC,cAAgB,iBAAiB,cACvC,KAAK,CAAC,CAAC,YAAc,iBAAiB;AAEzC,MAAM,gBAAgB,IAAI,QAAQ,CAAC;IACjC,WAAW,OAAO,CAAC,CAAC;QAClB,SAAS,gBAAgB,CAAC,WAAW;YACnC,QAAQ;gBAAE,SAAS;gBAAM,SAAS;YAA8B;QAClE;IACF;AACF;AAEA,cAAc,IAAI,CAAC,CAAC,cAAgB,iBAAiB;AAErD,MAAM,eAAe;IACnB,MAAM,WAAW,IAAI,QAAQ,CAAC;QAC5B,SAAS,gBAAgB,CAAC,UAAU,CAAC,EAAE,EAAE;YACvC,QAAQ;gBAAE,SAAS;gBAAM,SAAS;YAA6B;QACjE;IACF;IAEA,MAAM,WAAW,IAAI,QAAQ,CAAC;QAC5B,SAAS,gBAAgB,CAAC,UAAU,CAAC,EAAE,EAAE;YACvC,QAAQ;gBAAE,SAAS;gBAAM,SAAS;YAA6B;QACjE;IACF;IAEA,QAAQ,GAAG,CAAC;QAAC;QAAU;KAAS,EAAE,IAAI,CAAC,CAAC,cACtC,iBAAiB,WAAW,CAAC,EAAE;AAEnC;AAEA","sources":["src/scripts/main.js"],"sourcesContent":["/* eslint-disable function-paren-newline */\n'use strict';\n\nconst eventsType = ['contextmenu', 'click'];\n\nconst showNotification = (someData) => {\n  const div = document.createElement('div');\n\n  if (someData.success) {\n    div.classList.add('success');\n  }\n\n  if (!someData.success) {\n    div.classList.add('error');\n  }\n\n  div.setAttribute('data-qa', 'notification');\n  div.textContent = someData.message;\n\n  document.body.append(div);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener(eventsType[1], () => {\n    resolve({ success: true, message: 'First promise was resolved' });\n  });\n\n  setTimeout(reject, 3000, {\n    success: false,\n    message: 'First promise was rejected',\n  });\n});\n\nfirstPromise\n  .then((successData) => showNotification(successData))\n  .catch((errorData) => showNotification(errorData));\n\nconst secondPromise = new Promise((resolve) => {\n  eventsType.forEach((eventType) => {\n    document.addEventListener(eventType, () => {\n      resolve({ success: true, message: 'Second promise was resolved' });\n    });\n  });\n});\n\nsecondPromise.then((successData) => showNotification(successData));\n\nconst thirdPromise = () => {\n  const promise1 = new Promise((resolve) => {\n    document.addEventListener(eventsType[0], () => {\n      resolve({ success: true, message: 'Third promise was resolved' });\n    });\n  });\n\n  const promise2 = new Promise((resolve) => {\n    document.addEventListener(eventsType[1], () => {\n      resolve({ success: true, message: 'Third promise was resolved' });\n    });\n  });\n\n  Promise.all([promise1, promise2]).then((successData) =>\n    showNotification(successData[0]),\n  );\n};\n\nthirdPromise();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}